/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package softwaretestingclient;

import java.awt.Color;

/**
 *
 * @author Nichlas
 */
public class RegisterFrom extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrom
     */
    public RegisterFrom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        UsernameTxt = new javax.swing.JTextField();
        EmailTxt = new javax.swing.JTextField();
        PasswordTxt = new javax.swing.JTextField();
        OKBtn = new javax.swing.JButton();
        ErrorLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Sign up");

        jLabel2.setText("Username:");

        jLabel3.setText("Email:");

        jLabel4.setText("Password:");

        OKBtn.setText("OK");
        OKBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKBtnActionPerformed(evt);
            }
        });

        ErrorLabel.setForeground(new java.awt.Color(255, 0, 0));

        jLabel5.setText("*Username must be between 6 and 12 characters");

        jLabel6.setText("*Email must be valid");

        jLabel7.setText("*Password must be atleast 8 characters long");

        jLabel8.setText("*Password must contain at least 1 uppercase and 1 numeric value");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(OKBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(16, 16, 16)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(UsernameTxt)
                                        .addComponent(EmailTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                                .addComponent(jLabel1)))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(UsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OKBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addComponent(ErrorLabel)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKBtnActionPerformed
        // TODO add your handling code here:
        if(!checkEmailExist(EmailTxt.getText()) && registrate(UsernameTxt.getText(), EmailTxt.getText(), PasswordTxt.getText())){
           ErrorLabel.setForeground(Color.BLUE);
            ErrorLabel.setText("Succes Registration! An Email has been send");
            welcomeMail(EmailTxt.getText());// ----> ACTIVATE WHEN DONE
        }else{     
            ErrorLabel.setForeground(Color.RED);
            ErrorLabel.setText("Username Already exist! Try another");
            if (valUsername(UsernameTxt.getText()) == false) {
                ErrorLabel.setForeground(Color.RED);
                ErrorLabel.setText("Username does not fulfill the requirements!!");
            }else if (checkEmailExist(EmailTxt.getText())) {
                ErrorLabel.setForeground(Color.RED);
                ErrorLabel.setText("Email already exist in database");
            }else if (valEmail(EmailTxt.getText())== false) {
                ErrorLabel.setForeground(Color.RED);
                ErrorLabel.setText("Email does not fulfill the requirements!!");
            }else if (valPassword(PasswordTxt.getText())== false) {
                ErrorLabel.setForeground(Color.RED);
                ErrorLabel.setText("Password does not fulfill the requirements!!");
            }
        }
    }//GEN-LAST:event_OKBtnActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JButton OKBtn;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JTextField UsernameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables

    private static boolean valEmail(java.lang.String arg0) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        return port.valEmail(arg0);
    }

    private static boolean valPassword(java.lang.String arg0) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        return port.valPassword(arg0);
    }

    private static boolean valUsername(java.lang.String arg0) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        return port.valUsername(arg0);
    }

    private static void welcomeMail(java.lang.String arg0) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        port.welcomeMail(arg0);
    }

    private static Boolean checkEmailExist(java.lang.String arg0) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        return port.checkEmailExist(arg0);
    }

    private static boolean registrate(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) {
        service.LoginWebService_Service service = new service.LoginWebService_Service();
        service.LoginWebService port = service.getLoginWebServicePort();
        return port.registrate(arg0, arg1, arg2);
    }
}
